[{"title":"时间密码","url":"/2023/10/30/time-password/","content":"\n未来，可能会有这样一种密码系统：即使别人拿到你的密码，密码输入正确，但也无法通过验证，只有自己输入自己的密码，才是正确的。\n\n\n\n前言未来，可能会有这样一种密码系统：即使别人拿到你的密码，密码输入正确，但也无法通过验证，只有自己输入自己的密码，才是正确的。\n功能效果设计一种新的密码验证功能，不但验证密码的正确性，还会检测密码输入规律，判断密码输入速度、分析每个字符按下的时间间隔。\n技术原理每个人输入字符时，都有自己的特定的规律习惯，特别是密码：如果是一个高频使用的字符串，更是会有自己独特的输入节奏，比如整体输入耗时、每个字符间的停顿时间间隔。如果密验证系统在检测时同时对这行行为特征判断，那么即使密码泄露、即使他人获取了密码，也无法使用，因为他人不知道密码主人的输入习惯。\n演示下面，将演示如何实现这样的密码系统。现在的密码校验，都是将密码由前端传给后端，由后端判断密码是否正确。而这种新的系统，在用户输入密码时，会同时记录每个字符输入时的时间，并和密码一同发往后端。两者的区别是：新增对密码输入时间的分析。\n源码说明说明：为演示方便，在网页中实现此演示，并在前端直接验证。实际应用时，密码、时间数据等都应该存储在后端，校验也应该在后端完成。\n&lt;div class=&quot;container&quot;&gt;    &lt;div&gt;        &lt;span&gt;请设置密码：&lt;/span&gt;        &lt;input onkeydown=&quot;speed_password_check(event)&quot; type=&quot;text&quot;&gt;        &lt;button onclick=&quot;init()&quot;&gt;确定&lt;/button&gt;    &lt;/div&gt;    &lt;div&gt;        &lt;span&gt;请输入密码：&lt;/span&gt;        &lt;input onkeydown=&quot;speed_password_init(event)&quot; type=&quot;text&quot; id=&quot;pass&quot;&gt;        &lt;button onclick=&quot;check()&quot;&gt;确定&lt;/button&gt;    &lt;/div&gt;&lt;/div&gt;   \nlet password_check = [], speed_check = [], password = [], speed = []function speed_password_check (event) &#123;    password_check.push(String.fromCharCode(event.keyCode + 32));    speed_check.push(Date.now());&#125;function init () &#123;    if (password_check.length == 4) &#123;        var msg = &quot;密码：&quot; + password_check.join(&quot;&quot;) + &quot;，时间特征：&quot; + speed_check;        console.log(msg)        alert(&quot;已初始化，&quot; + msg);    &#125; else &#123;        alert(&quot;密码长度不正确，请重新设定&quot;);        password_check = [];        speed_check = [];    &#125;&#125;\n\n上图部分，是初始化，预存储一个密码和密码对应的按键时间（单位为毫秒）。然后的重点是校验，在用户输入密码后，先校验密码的正确性，再校验其输入规律\n密码校验function check () &#123;        //校验密码    if (password_check.join(&quot;&quot;) == password.join(&quot;&quot;)) &#123;        //检验时间值，容错值：300 毫秒        var time_range = 300;        var check_ok = true;        //判断 4 个字母每次输时的时间间隔，在设定的容错值范围内，视为正常        if (Math.abs((speed[1] - speed[0]) - (speed_check[1] - speed_check[0])) &gt;= time_range) &#123;            check_ok = false;        &#125;        if (Math.abs((speed[2] - speed[1]) - (speed_check[2] - speed_check[1])) &gt;= time_range) &#123;            check_ok = false;        &#125;        if (Math.abs((speed[3] - speed[2]) - (speed_check[3] - speed_check[2])) &gt;= time_range) &#123;            check_ok = false;        &#125;        if (check_ok == false) &#123;            alert(&quot;密码时间校验失败&quot;);            password = [];            speed = [];        &#125; else &#123;            alert(&quot;密码、时间全部校验成功&quot;)        &#125;    &#125; else &#123;            console.log(password,speed);            alert(&quot;密码错误&quot;);            password = [];            speed = [];        &#125;&#125;\n\n有一个现实问题是：用户每次输入密码时，按键速度不可能每次都完全一样，肯定是有差别的，因此，设置了一个容错值，如上图中显示，在本例了这个值设为了 300 毫秒，即：允许每个按键的时间有一定差别，可以快一些，也可以慢一些。\n写在最后至此，文章就分享完毕了,本文只演示了一个功能简单的 DEMO，相信在未来，定会有这样的密码系统。\n\n我是程序员林萧，一位前端开发工程师。\n文中如有错误，欢迎在评论区指正，如果这篇文章帮到了你，欢迎点赞和关注如果你对我有兴趣，欢迎添加我的个人微信：Lxlucky2022Github：https://github.com/KevinLin8\n\n\n\n","categories":["Javascript"],"tags":["机灵鬼"]},{"title":"Markdown 教程","url":"/2023/10/30/markdown/","content":"\nMarkdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。Markdown 编写的文档后缀为 .md, .markdown。\n\n\n\n标题👆 看起来就像上面这个。Markdown 标题有两种格式。\n使用 = 和 - 标记一级和二级标题= 和 - 标记语法格式如下：\n我展示的是一级标题=================我展示的是二级标题-----------------\n\n使用 # 号标记使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。\n# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题\n\n段落样式Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。当然也可以在段落后面使用一个空行来表示重新开始一个段落。\n字体Markdown 可以使用以下几种字体：\n\n斜体文本粗体文本粗斜体文本\n\n*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___\n\n分隔线可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n\n\n我\n\n裂\n\n开\n\n了\n\n\n**** * ******- - -----------\n\n删除线如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：\n\nRUNOOB.COMGOOGLE.COMBAIDU.COM\n\nRUNOOB.COMGOOGLE.COM~~BAIDU.COM~~\n\n下划线下划线可以通过 HTML 的 &lt;u&gt; 标签来实现：\n\n带下划线文本\n\n&lt;u&gt;带下划线文本&lt;/u&gt;\n\n脚注脚注是对文本的补充说明。Markdown 脚注的格式如下:\n[^要注明的文本]\n以下实例演示了脚注的用法：\n\n阿米娅^阿米娅\n\n创建脚注格式类似这样 [^阿米娅][^阿米娅]: 博士，您还有很多事情需要处理。现在还不能休息哦。\n\nMarkdown 列表Markdown 支持有序列表和无序列表。无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：\n\n\n第一项\n第二项\n第三项\n\n\n* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项\n有序列表使用数字并加上 . 号来表示，如：\n\n\n第一项\n第二项\n第三项\n\n\n1. 第一项2. 第二项3. 第三项\n\n列表嵌套列表嵌套只需在子列表中的选项添加四个空格即可：\n\n第一项：\n第一项嵌套的第一个元素\n第一项嵌套的第二个元素\n\n\n第二项：\n第二项嵌套的第一个元素\n第二项嵌套的第二个元素\n\n\n\n1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素\n\nMarkdown 区块Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：\n\n这是一个区块\n\n&gt; 这是一个区块\n另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：\n\n最外层\n\n第一层嵌套\n\n第二层嵌套\n\n\n\n&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套\n\n区块中使用列表区块中使用列表实例如下：\n\n区块中使用列表\n\n第一项\n第二项\n\n\n第一项\n第二项\n第三项\n\n\n&gt; 区块中使用列表&gt; 1. 第一项&gt; 2. 第二项&gt; + 第一项&gt; + 第二项&gt; + 第三项\n\n列表中使用区块如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。区块中使用列表实例如下：\n\n第一项\n菜鸟教程学的不仅是技术更是梦想\n\n\n第二项* 第一项    &gt; 菜鸟教程    &gt; 学的不仅是技术更是梦想* 第二项\n\nMarkdown 代码如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：printf() 函数\n`printf()` 函数\n代码区块代码区块使用 4 个空格或者一个制表符（Tab 键）。也可以用 &#96;&#96;&#96; 包裹一段代码，并指定一种语言（也可以不指定）：实例如下：\n$(document).ready(function () &#123;    alert(&#x27;RUNOOB&#x27;);&#125;);\n\nMarkdown 链接链接使用方法如下：\n\n链接名称或者直接使用链接地址https://github.com/Yue-plus\n\n[链接名称](链接地址)&lt;https://github.com/Yue-plus&gt;\n\n高级链接可以通过变量来设置一个链接，变量赋值在文档末尾进行：\n\n这个链接用 1 作为网址变量 Google这个链接用 mysite 作为网址变量 Yue_plus\n\n这个链接用 1 作为网址变量 [Google][1]这个链接用 mysite 作为网址变量 [Yue_plus][mysite]然后在文档的结尾为变量赋值（网址）  [1]: http://www.google.com/  [mysite]: https://github.com/Yue-plus\n\nMarkdown 图片Markdown 图片语法格式如下：\n![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)\n开头一个感叹号 !接着一个方括号，里面放上图片的替代文字接着一个英文括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字。\n\n\n\n![罗德岛集结](https://ak.hypergryph.com/upload/images/20190228/118078295785f64dac736c6ade50bb76.jpg &quot;罗德岛集结&quot;)\n当然，你也可以像网址那样对图片网址使用变量:\n这个链接用 `2` 作为网址变量 [凯尔希][2].然后在文档的结尾为变量赋值（网址）[2]: https://ak.hypergryph.com/upload/images/20190228/143666074a406ecaa6cd4271dc7c5127.jpg\nMarkdown 还没有办法指定图片的高度与宽度，如果需要的话，也可以使用普通的 &lt;img&gt; 标签。\n\n\n&lt;img src=&quot;https://ak.hypergryph.com/assets/index/images/ak/common/story/item_infected.png&quot; width=&quot;200px&quot;&gt;\n\nMarkdown 表格Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。语法格式如下：\n\n\n\n表头\n表头\n\n\n\n单元格\n单元格\n\n\n单元格\n单元格\n\n\n|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |\n\n可以设置表格的对齐方式：\n-: 设置内容和标题栏居右对齐。:- 设置内容和标题栏居左对齐。:-: 设置内容和标题栏居中对齐。\n\n\n\n左对齐\n右对齐\n居中对齐\n\n\n\n单元格\n单元格\n单元格\n\n\n单元格\n单元格\n单元格\n\n\nMarkdown 高级技巧##支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等，如：\n\n使用 Ctrl+Alt+Del 重启电脑\n\n使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑\n\n转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n\n** 正常显示星号 **\n\n**文本加粗** \\*\\* 正常显示星号 \\*\\*\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\\   反斜线`   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号\n\n数学公式当需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：\n\n参考 使用 hexo-filter-mathjax 过滤器来显示数学公式\n\n\n可以在行内包含数学公式： $i\\hbar\\frac{\\partial}{\\partial t}\\psi&#x3D;-\\frac{\\hbar^2}{2m}\\nabla^2\\psi+V\\psi$ 注意单 $ 内部不能有空格！$$\\begin{eqnarray*}\\nabla\\cdot\\vec{E}&amp;&#x3D;&amp;\\frac{\\rho}{\\epsilon_0}\\\\\\nabla\\cdot\\vec{B}&amp;&#x3D;&amp;0\\\\\\nabla\\times\\vec{E}&amp;&#x3D;&amp;-\\frac{\\partial B}{\\partial t}\\\\\\nabla\\times\\vec{B}&amp;&#x3D;&amp;\\mu_0\\left(\\vec{J}+\\epsilon_0\\frac{\\partial E}{\\partial t}\\right)\\\\\\end{eqnarray*}$$\n\n可以在行内包含数学公式： $i\\hbar\\frac&#123;\\partial&#125;&#123;\\partial t&#125;\\psi=-\\frac&#123;\\hbar^2&#125;&#123;2m&#125;\\nabla^2\\psi+V\\psi$ 注意单 `$` 内部不能有空格！$$\\begin&#123;eqnarray\\*&#125;\\nabla\\cdot\\vec&#123;E&#125;&amp;=&amp;\\frac&#123;\\rho&#125;&#123;\\epsilon_0&#125;\\\\\\\\\\nabla\\cdot\\vec&#123;B&#125;&amp;=&amp;0\\\\\\\\\\nabla\\times\\vec&#123;E&#125;&amp;=&amp;-\\frac&#123;\\partial B&#125;&#123;\\partial t&#125;\\\\\\\\\\nabla\\times\\vec&#123;B&#125;&amp;=&amp;\\mu_0\\left(\\vec&#123;J&#125;+\\epsilon_0\\frac&#123;\\partial E&#125;&#123;\\partial t&#125;\\right)\\\\\\\\\\end&#123;eqnarray\\*&#125;$$\n\n","categories":["Markdown"],"tags":["教程"]},{"title":"关于我","url":"/about/index.html","content":"\n  \n\n\n\n身份\n\n前端cv攻城狮半只脚踏入00后的90后\n\n\n\n代名词\n\n摸鱼协会会长精神EMO患者\n\n\n\n写博客的目的\n\n分享工作遇到的问题强迫自己梳理知识体系记录美好生活\n\n\n\n"},{"title":"categories","url":"/categories/index.html","content":""},{"title":"chatwhiz","url":"/chatwhiz/index.html","content":"\n    * {\n        margin: 0;\n        padding: 0;\n    }\n    .chatpdf {\n        display: flex;\n        height: 100%;\n        flex-direction: column;\n        flex: 1;\n    }\n    .chatpdfBox {\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n    }\n    .chatpdfLine {\n        flex: 1;\n        width: 100%;\n        max-width: 1000px;\n        margin: 0 auto;\n        overflow-y: auto;\n    }\n    .chatpdfRow {\n        margin: 20px 10px;\n        display: flex;\n    }\n    .chatpdfAsk {\n        justify-content: flex-end;\n    }\n    .chatpdfContent {\n        display: inline-block;\n        border-radius: 8px;\n        padding: 6px 12px;\n        max-width: 500px;\n        font-size: 14px;\n        background: rgb(68, 70, 84)\n        color: rgb(255,255,255);\n        box-shadow: 0px 0.3px 0.9px rgba(0, 0, 0, 0.12), 0px 1.6px 3.6px rgba(0, 0, 0, 0.16);\n    }\n    .chatpdfAsk .chatpdfContent {\n        background: linear-gradient(90deg, #5b5b8a 10.79%, rgb(52, 53, 65) 87.08%);\n        color: #fff;\n    }\n    .chatpdfArea {\n        display: flex;\n        padding: 5px 10px;\n        max-width: 1000px;\n        margin: 0 auto;\n        width: 100%;\n        position: relative;\n    }\n    .chatpdfArea textarea {\n        flex: 1;\n        /* resize: vertical; */\n        outline: none;\n        border-color:rgb(58, 58, 60);\n        padding: 5px;\n        min-height: 40px;\n        height: auto;\n        color: #eee;\n        border-radius: 8px;\n        box-sizing: border-box;\n        transition: all 0.3s, height 0s;\n        background: rgb(58, 58, 60);\n        max-height: 200px;\n    }\n    .chatpdfArea textarea::-webkit-scrollbar {display:none}\n\n    .chatpdfArea textarea:hover {\n        border-color: rgb(28, 29, 30);\n    }\n    .chatpdfArea button {\n        position: absolute;\n        height: 35px;\n        color: #fff;\n        background: rgb(58, 58, 60);\n        border: none;\n        padding: 0 20px;\n        border-radius: 8px;\n        cursor: pointer;\n        right: 20px;\n        bottom: 8px;\n    }\n    .chatpdfArea button:hover {\n        /* background-color: #388aff; */\n    }\n    .chatpdf .fileTitle {\n        background-color: #1677ff;\n        color: #fff;\n        border-radius: 8px;\n        padding: 10px;\n        margin: 10px;\n        font-size: 14px;\n        cursor: pointer;\n    }\n    @media (max-width: 768px) {\n        .pannel {\n            display: none;\n        }\n    }\n\n\n    \n        \n            \n                我是知识库机器人，一个专门响应人类指令的大模型\n            \n            \n                我服务于人类，致力于让生活更美好\n            \n            \n                我是知识库机器人，一个专门响应人类指令的大模型\n            \n            \n                自建私有数据知识库 · 与知识库AI聊天\n            \n        \n        \n            \n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    var textarea = document.querySelector('textarea');\n    textarea.addEventListener('input', (e) => {\n        if(e.target.value == ''){\n            textarea.style.height = 40 + 'px'\n        }\n        textarea.style.height = e.target.scrollHeight + 'px';\n    });\n"},{"url":"/css/custom.css","content":"/* 侧边栏底部 */\nfooter span{\n    color: rgb(34,187,255);\n}\nfooter{\n    font-size: 12px !important;\n}\n@font-face {\n    font-family: \"iconfont\";\n    /* Project id 4113856 */\n    src: url('//at.alicdn.com/t/c/font_4113856_dyf3q23sk2o.woff2?t=1698736015126') format('woff2'),\n        url('//at.alicdn.com/t/c/font_4113856_dyf3q23sk2o.woff?t=1698736015126') format('woff'),\n        url('//at.alicdn.com/t/c/font_4113856_dyf3q23sk2o.ttf?t=1698736015126') format('truetype');\n}\n\n.iconfont {\n    font-family: \"iconfont\" !important;\n    /* font-size: 16px; */\n    font-style: normal;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-fenxiangweixin:before {\n    content: \"\\e669\";\n}\n.icon-github:before {\n    content: \"\\e63a\";\n}\n/* 头像 */\n#logo img{ border-radius: 10%; -webkit-border-radius: 10%; -moz-border-radius: 10%; -ms-border-radius: 10%; -o-border-radius: 10%; box-sizing: border-box; width: 100%; transform: scale(0.7); -webkit-transform: scale(0.7); -moz-transform: scale(0.7); -ms-transform: scale(0.7); -o-transform: scale(0.7);\n}\n#post-bg {\n    display: flex;\n    /* 设置为flex布局 */\n    flex-direction: column;\n    /* 设置为纵向排列 */\n}\n\n#post-content {\n    flex: 1;\n    /* 使用flex属性将子盒子的高度设置为自动填充 */\n    display: flex;\n        /* 设置为flex布局 */\n        flex-direction: column;\n}"},{"url":"/js/custom.js","content":"const targetDate = new Date(\"2023-06-08T14:30:37\"); // 指定时间\n// 计算时间\nfunction TimeCalculation () {\n    let time = {\n        diffInDays: 0,\n        diffInHours: 0,\n        diffInMinutes: 0,\n        diffInSeconds: 0,\n    }\n    const currentDate = new Date(); // 当前时间\n    const diffInMilliseconds = Math.abs(targetDate - currentDate); // 计算差值(单位为毫秒)\n    const date = new Date(diffInMilliseconds); // 创建一个表示指定时间的Date对象\n    time.diffInDays = Math.floor(date.getTime() / (24 * 60 * 60 * 1000)); // 计算天数差值\n    time.diffInHours = Math.floor(\n        (date.getTime() % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000)\n    ); // 计算小时差值\n    time.diffInMinutes = Math.floor(\n        (date.getTime() % (60 * 60 * 1000)) / (60 * 1000)\n    ); // 计算分钟差值\n    time.diffInSeconds = Math.floor(\n        (date.getTime() % (60 * 1000)) / 1000\n    ); // 计算秒差值\n    return time\n}\nconst footer = document.querySelector('footer')\nfooter.innerHTML = ''\nlet my_div = document.createElement('div')\nmy_div.innerHTML = `\n    本站已运行： ${TimeCalculation().diffInDays} 天 ${TimeCalculation().diffInHours} 时 ${TimeCalculation().diffInMinutes} 分 ${TimeCalculation().diffInSeconds} 秒 `\nfooter.appendChild(my_div);\n\nfunction updateDom(){\n    if(my_div.children[0].children.length){\n        my_div.children[0].children[0].textContent = TimeCalculation().diffInDays\n        my_div.children[0].children[1].textContent = TimeCalculation().diffInHours\n        my_div.children[0].children[2].textContent = TimeCalculation().diffInMinutes\n        my_div.children[0].children[3].textContent = TimeCalculation().diffInSeconds\n    }\n}\nsetInterval(updateDom,1000)\n"},{"title":"tags","url":"/tags/index.html","content":""}]